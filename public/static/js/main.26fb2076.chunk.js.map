{"version":3,"sources":["components/Header.tsx","components/SearchBox.tsx","pages/index.tsx","api.ts","components/CellBox.tsx","components/cell.tsx","pages/search.tsx","pages/post.tsx","actions/types.ts","components/AuthLayout.tsx","pages/signup.tsx","actions/auth.ts","pages/login.tsx","components/dashboard/headerDash.tsx","components/dashboard/mainLayout.tsx","components/dashboard/dashLayout.tsx","components/authPopup.tsx","pages/dashboardHome.tsx","pages/dashboard-getpost.tsx","App.tsx","reportWebVitals.ts","reducers/authReducer.ts","reducers/index.ts","store.ts","index.tsx"],"names":["HeaderTop","phValue","useState","openMenu","setOpenMenu","search","setSearch","value","setValue","searchRef","useRef","navigate","useNavigate","console","log","radioHandler","e","target","className","onSubmit","replace","type","placeholder","ref","onChange","onClick","FindInPage","htmlFor","name","id","defaultChecked","to","SearchBox","noValidate","LandingPage","Header","url","getAllPosts","queryPost","queryPostByName","queryPostByTopic","signUser","loginUser","CellBox","author","title","yearOfPub","body","Cell","posts","map","el","_id","author_name","project_topic","Search","props","post","setPost","loading","setLoading","setError","useParams","searchQuery","useEffect","res","a","axios","get","data","fetchData","style","height","width","Post","supervisor_name","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","AuthLayout","year","Date","getFullYear","children","Signup","dispatch","useDispatch","userObj","useSelector","state","user","email","password","passwordConfirm","setState","nameMsg","setNameMsg","passwordError","setPasswordError","passwordConfirmError","setPasswordConfirmError","nameError","setNameError","emailError","setEmailError","isDisabled","loginError","setLoginError","errorMsg","setErrorMsg","onPasswordChange","String","preventDefault","dataSet","JSON","stringify","parse","message","payload","Promise","resolve","response","error","code","reject","signUp","then","catch","marginBottom","test","persist","onNameChange","required","onEmailChange","disabled","Login","statusCode","login","HeaderDash","username","action","Notifications","Face","Settings","MainLayout","marginTop","color","Store","Dashboard","AccountCircle","AssignmentReturn","DashLayout","document","classList","add","AuthPopup","content","handleClose","DashboardHome","loggedIn","projectTopic","setProjectTopic","authorName","setAuthorName","supervisorName","setSupervisorName","setRef","setBody","showPopup","setShowPopup","date","setDate","setTimeout","fontSize","status","err","selected","GetPost","split","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","localStorage","setItem","token","getItem","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26fb2076.chunk.js","sourcesContent":["import { FC, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"@reach/router\";\r\n\r\n//icons\r\nimport { Search, FindInPage } from \"@material-ui/icons\";\r\n\r\ninterface HeaderProps {\r\n   phValue?: string;\r\n}\r\n\r\nconst HeaderTop: FC<HeaderProps> = ({ phValue }) => {\r\n   const [openMenu, setOpenMenu] = useState<boolean>(false);\r\n   const [search, setSearch] = useState<string>(\"all\");\r\n   const [value, setValue] = useState<string>(\"\");\r\n   let searchRef = useRef<HTMLInputElement | null>(null);\r\n   const navigate = useNavigate();\r\n   console.log(search);\r\n\r\n   const radioHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setSearch(e.target.value);\r\n   };\r\n   const handleClick = () => {\r\n      setOpenMenu(!openMenu);\r\n   };\r\n   return (\r\n      <div className=\"header-top\">\r\n         <div className=\"header-icon\">\r\n            <h2 className=\"header-icon_txt\">softSearch</h2>\r\n         </div>\r\n         <form\r\n            className={\"header-form\"}\r\n            onSubmit={() =>\r\n               navigate(`/search/${search}/${value}`, { replace: false })\r\n            }\r\n         >\r\n            {phValue ? (\r\n               <input\r\n                  type=\"search\"\r\n                  className={\"header-form_input\"}\r\n                  placeholder={`${phValue}`}\r\n                  ref={searchRef}\r\n                  onChange={(e) => setValue(e.target.value)}\r\n               />\r\n            ) : (\r\n               <input\r\n                  type=\"search\"\r\n                  className={\"header-form_input\"}\r\n                  placeholder={`search record`}\r\n                  ref={searchRef}\r\n                  onChange={(e) => setValue(e.target.value)}\r\n               />\r\n            )}\r\n\r\n            <button className={\"header-form_button\"}>\r\n               <Search className={\"header-form_icon\"} />\r\n            </button>\r\n         </form>\r\n         <nav className=\"header-nav\">\r\n            <div className=\"header-nav_div\">\r\n               <button className=\"header-nav_btn\" onClick={handleClick}>\r\n                  <FindInPage className=\"header-nav_icon\" />\r\n               </button>\r\n               {openMenu && (\r\n                  <form className=\"header-nav_form\">\r\n                     <div className=\"header-nav_form-class\">\r\n                        <label htmlFor=\"btn\" className=\"header-nav_form-label\">\r\n                           all\r\n                        </label>\r\n                        <input\r\n                           type=\"radio\"\r\n                           name=\"btn\"\r\n                           id=\"button\"\r\n                           className=\"header-nav_form-input\"\r\n                           defaultChecked\r\n                           value={\"all\"}\r\n                           onChange={radioHandler}\r\n                        />\r\n                     </div>\r\n\r\n                     <div className=\"header-nav_form-class\">\r\n                        <label htmlFor=\"btn\" className=\"header-nav_form-label\">\r\n                           author name\r\n                        </label>\r\n                        <input\r\n                           type=\"radio\"\r\n                           name=\"btn\"\r\n                           id=\"button\"\r\n                           value={\"name\"}\r\n                           className=\"header-nav_form-input\"\r\n                           onChange={radioHandler}\r\n                        />\r\n                     </div>\r\n\r\n                     <div className=\"header-nav_form-class\">\r\n                        <label htmlFor=\"btn\" className=\"header-nav_form-label\">\r\n                           project topic\r\n                        </label>\r\n                        <input\r\n                           type=\"radio\"\r\n                           name=\"btn\"\r\n                           id=\"button\"\r\n                           value=\"topic\"\r\n                           className=\"header-nav_form-input\"\r\n                           onChange={radioHandler}\r\n                        />\r\n                     </div>\r\n                  </form>\r\n               )}\r\n            </div>\r\n            <div className=\"header-nav_div\">\r\n               <h4 className=\"header-nav-box\">\r\n                  <Link to={\"/signup\"} className=\"header-nav-text\">\r\n                     sign up\r\n                  </Link>\r\n                  <Link to={\"/login\"} className=\"header-nav-text\">\r\n                     login\r\n                  </Link>\r\n               </h4>\r\n            </div>\r\n         </nav>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default HeaderTop;\r\n","import { FC, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"@reach/router\";\r\n\r\n//icons\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\ninterface SearchBoxProps {\r\n   // history?: History;\r\n}\r\n\r\nconst SearchBox: FC<SearchBoxProps> = () => {\r\n   const [value, setValue] = useState<string>(\"\");\r\n   let searchRef = useRef<HTMLInputElement | null>(null);\r\n   const navigate = useNavigate();\r\n\r\n   return (\r\n      <section className=\"search\">\r\n         <main className=\"search-box\">\r\n            <h2 className=\"search-hdText\">softSearch</h2>\r\n            <form\r\n               noValidate\r\n               className=\"search_form\"\r\n               onSubmit={() =>\r\n                  navigate(`/search/all/${value}`, { replace: false })\r\n               }\r\n            >\r\n               <div className=\"search_form-flex\">\r\n                  <button className={\"search_form_button\"}>\r\n                     <Search className={\"search_form_icon\"} />\r\n                  </button>\r\n                  <input\r\n                     type=\"search\"\r\n                     className={\"search_form_input\"}\r\n                     ref={searchRef}\r\n                     onChange={(e) => setValue(e.target.value)}\r\n                     placeholder={\"search record or type an author\"}\r\n                  />\r\n               </div>\r\n               <button className=\"search_button-text\">search</button>\r\n            </form>\r\n         </main>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { FC } from \"react\";\r\n\r\nimport HeaderTop from \"../components/Header\";\r\nimport SearchBox from \"../components/SearchBox\";\r\n\r\nconst LandingPage: FC = () => {\r\n   return (\r\n      <section className=\"container\">\r\n         <HeaderTop />\r\n         <SearchBox />\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default LandingPage;\r\n","const url = \"https://chidi-search.herokuapp.com\";\r\nexport const getAllPosts = `${url}/api/v1/post`;\r\nexport const queryPost = `${url}/api/v1/post/search`;\r\nexport const queryPostByName = `${url}/api/v1/post/search/name`;\r\nexport const queryPostByTopic = `${url}/api/v1/post/search/topic`;\r\nexport const queryPostByBody = `${url}/api/v1/post/search/body`;\r\nexport const signUser = `${url}/api/v1/user/signup`;\r\nexport const loginUser = `${url}/api/v1/user/login`;","import { FC } from \"react\";\r\n\r\ninterface CellBoxProps {\r\n   id?: string;\r\n   title: string;\r\n   author: string;\r\n   body: string;\r\n   yearOfPub: string;\r\n   createdAt?: Date;\r\n}\r\n\r\nconst CellBox: FC<CellBoxProps> = ({ author, title, yearOfPub, body }) => {\r\n   return (\r\n      <li className=\"cell-list\">\r\n         <h2 className=\"cell-hdText\">{title}</h2>\r\n         <p>{body}</p>\r\n         <div className=\"cell-flex\">\r\n            <h4 className=\"cell-author\">{author}</h4>\r\n            <h4 className=\"cell-date\">{yearOfPub}</h4>\r\n         </div>\r\n      </li>\r\n   );\r\n};\r\n\r\nexport default CellBox;\r\n","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CellBox from \"./CellBox\";\r\n\r\ninterface CellProps {\r\n   posts: string[];\r\n}\r\n\r\ninterface postType {\r\n   _id?: string;\r\n   type: string;\r\n   author_name: string;\r\n   id: number;\r\n   project_topic: string;\r\n   body: string[];\r\n   yearOfPub: string;\r\n}\r\n\r\nconst Cell: FC<CellProps> = ({ posts }) => {\r\n   console.log(posts);\r\n   return (\r\n      <div className=\"cell\">\r\n         {posts.map((el: any) => (\r\n            // {console.log(el._id)}\r\n            <Link to={`/post/${el._id}`} className={\"cell-link\"}>\r\n               <ul className=\"cell-lists\">\r\n                  <CellBox\r\n                     author={el.author_name}\r\n                     title={el.project_topic}\r\n                     body={el.body[0]}\r\n                     yearOfPub={el.yearOfPub}\r\n                  />\r\n               </ul>\r\n            </Link>\r\n         ))}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Cell;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { queryPost, queryPostByName, queryPostByTopic } from \"../api\";\r\n\r\nimport HeaderTop from \"../components/Header\";\r\nimport Cell from \"../components/cell\";\r\n\r\nconst Search: FC = (props) => {\r\n   const [post, setPost] = useState([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(false);\r\n   let { id, searchQuery } = useParams();\r\n   console.log(id, searchQuery);\r\n\r\n   useEffect(() => {\r\n      let res: any;\r\n      const fetchData = async () => {\r\n         try {\r\n            if (searchQuery === \"name\") res = await axios.get(`${queryPostByName}/${id}`);\r\n            if (searchQuery === \"topic\") res = await axios.get(`${queryPostByTopic}/${id}`);\r\n            if (searchQuery === \"all\") res = await axios.get(`${queryPost}/${id}`);\r\n            const { data } = res.data;\r\n            setPost(data);\r\n            setLoading(false);\r\n            setError(false);\r\n         } catch (err) {\r\n            setLoading(false);\r\n            setError(true);\r\n         }\r\n      };\r\n      fetchData();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   // console.log(post);\r\n\r\n   return (\r\n      <section className=\"cell-container\">\r\n         <HeaderTop phValue={id}/>\r\n         {loading && (\r\n            <div className=\"error mt-6\">\r\n               <div\r\n                  style={{ height: \"10rem\", width: \"10rem\" }}\r\n                  className=\"loading-spinner\"\r\n               />\r\n            </div>\r\n         )}\r\n         <Cell posts={post}/>\r\n      </section>\r\n   );\r\n};\r\nexport default Search;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport HeaderTop from \"../components/Header\";\r\n\r\nimport { getAllPosts } from \"../api\";\r\n\r\ninterface postType {\r\n   _id?: string;\r\n   type: string;\r\n   author_name: string;\r\n   id: number;\r\n   project_topic: string;\r\n   body: string[];\r\n   yearOfPub: string;\r\n   // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n}\r\n\r\nconst Post: FC = () => {\r\n   const [post, setPost] = useState<any>([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(false);\r\n   let { id } = useParams();\r\n\r\n   useEffect(() => {\r\n      let res: any;\r\n      const fetchData = async () => {\r\n         try {\r\n            res = await axios.get(`${getAllPosts}/${id}`);\r\n            const { data } = res.data;\r\n            setPost(data);\r\n            setLoading(false);\r\n            setError(false);\r\n         } catch (err) {\r\n            setLoading(false);\r\n            setError(true);\r\n         }\r\n      };\r\n      fetchData();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   console.log(post);\r\n\r\n   return (\r\n      <>\r\n         <HeaderTop />\r\n         <section className=\"post\">\r\n            <main className=\"post-main\">\r\n               <h1 className=\"post-project_topic\">{post.project_topic}</h1>\r\n               <div className=\"post-div\">\r\n                  <span className=\"post-name\">\r\n                     author name: {post.author_name}\r\n                  </span>\r\n                  <span className=\"post-year\">\r\n                     year of publication: {post.yearOfPub}\r\n                  </span>\r\n               </div>\r\n\r\n               <p className=\"post_p\">\r\n                  <span className={\"post_chapter\"}>Chapters:</span>\r\n                  {post.body}\r\n               </p>\r\n\r\n               <p className=\"post_p borderline\">\r\n                  <span className={\"post_chapter\"}>ref:</span>\r\n                  {post.ref}\r\n               </p>\r\n\r\n               <div className=\"post_super\">\r\n                  <span className={\"post_chapter\"}>supervisors:</span>\r\n                  {post.supervisor_name}\r\n               </div>\r\n            </main>\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Post;\r\n","export const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";","import { FC } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst AuthLayout: FC = (props) => {\r\n    const year = new Date().getFullYear();\r\n    return (\r\n        <main className=\"signup-bg\">\r\n            <div className=\"signup-nav\">\r\n                <Link className={\"signup-logoLink\"} to=\"/\">\r\n                <h2 className=\"header-icon_txt\">softSearch</h2>\r\n                </Link>\r\n                <nav>\r\n                    <ul className=\"signup-list\">\r\n                        <li className=\"signup-nav-item\">\r\n                            <NavLink className=\"signup-nav-link\" to=\"/login\">login</NavLink>\r\n                        </li>\r\n                        <li className=\"signup-nav-item\"><NavLink className=\"signup-nav-link\" to=\"/signup\">sign up</NavLink></li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            {props.children}\r\n            <footer className=\"signup-footer\">\r\n                <p>copyright softSearch &copy; {year}</p>\r\n            </footer>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import { FC, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../reducers\";\r\nimport { AppDispatch } from \"../store\";\r\nimport { signUp, dataObj } from \"../actions/auth\";\r\nimport AuthLayout from \"../components/AuthLayout\";\r\n\r\nconst Signup: FC = (props) => {\r\n   const useAppDispatch = () => useDispatch<AppDispatch>();\r\n   const dispatch:any = useAppDispatch();\r\n   const userObj = useSelector((state: RootState) => state.user);\r\n   const navigate = useNavigate();\r\n   console.log(userObj);\r\n\r\n   const [state, setState] = useState({\r\n      email: \"\",\r\n      name: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\"\r\n   });\r\n\r\n   const [nameMsg, setNameMsg] = useState<string>(\"\");\r\n   const [passwordError, setPasswordError] = useState(false);\r\n   const [passwordConfirmError, setPasswordConfirmError] =\r\n      useState<boolean>(false);\r\n   const [nameError, setNameError] = useState<boolean>(false);\r\n   const [emailError, setEmailError] = useState<boolean>(false);\r\n   const [loading, setLoading] = useState<boolean>(false);\r\n   const [isDisabled, setIsDisabled] = useState<boolean>(false);\r\n   const [loginError, setLoginError] = useState(false);\r\n   const [errorMsg, setErrorMsg] = useState<string>(\"\");\r\n\r\n   const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState((state) => ({\r\n         ...state,\r\n         email: e.target.value\r\n      }));\r\n      const pattern =\r\n         /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n      if (pattern.test(e.target.value)) {\r\n         e.persist();\r\n         console.log(\"hit here!\");\r\n         setState((state) => ({\r\n            ...state,\r\n            email: e.target.value\r\n         }));\r\n         // setEmail(mail);\r\n         setEmailError(false);\r\n      } else {\r\n         setEmailError(true);\r\n      }\r\n   };\r\n\r\n   const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState((state) => ({\r\n         ...state,\r\n         name: e.target.value\r\n      }));\r\n      let namePattern = /^[a-zA-Z][a-zA-Z\\s]*$/g;\r\n      if (e.target.value !== \"\" && e.target.value !== null) {\r\n         if (namePattern.test(e.target.value)) {\r\n            e.persist();\r\n            setState((state) => ({\r\n               ...state,\r\n               name: e.target.value\r\n            }));\r\n         } else {\r\n            setNameError(true);\r\n            setNameMsg(\"field should contain valid string\");\r\n         }\r\n      }\r\n   };\r\n\r\n   const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState((state) => ({\r\n         ...state,\r\n         password: e.target.value,\r\n         passwordConfirm: e.target.value\r\n      }));\r\n      if (\r\n         e.target.name === \"password\" &&\r\n         String(e.target.name) === \"passwordConfirm\"\r\n      ) {\r\n         if (e.target.value === \"\" || e.target.value === null) {\r\n            setPasswordError(true);\r\n            setPasswordConfirmError(true);\r\n         } else {\r\n            setState((state) => ({\r\n               ...state,\r\n               password: e.target.value,\r\n               passwordConfirm: e.target.value\r\n            }));\r\n            setPasswordError(false);\r\n            setPasswordConfirmError(false);\r\n         }\r\n      }\r\n   };\r\n\r\n   const onSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      if (\r\n         nameError === false &&\r\n         passwordError === false &&\r\n         emailError === false &&\r\n         passwordConfirmError === false\r\n      ) {\r\n         const data: dataObj = {\r\n            name: state.name,\r\n            email: state.email,\r\n            password: state.password,\r\n            passwordConfirm: state.passwordConfirm\r\n         };\r\n         setLoading(false);\r\n         dispatch(signUp(data))\r\n            .then(() => {\r\n               console.log(\"logged in\");\r\n               navigate(\"/login\");\r\n               setErrorMsg(\"success\");\r\n            })\r\n            .catch(() => {\r\n               setLoginError(true);\r\n               setErrorMsg(\"email already taken\");\r\n            });\r\n         // if (userObj.message === \"success\") {\r\n         //    setNameMsg(\"success\");\r\n         // }\r\n      } else {\r\n         setLoginError(true);\r\n      }\r\n      \r\n   };\r\n   return (\r\n      <section className=\"signup\">\r\n         <AuthLayout>\r\n            <form\r\n               noValidate\r\n               className={\"signup-form\"}\r\n               onSubmit={(e) => onSubmit(e)}\r\n            >\r\n               <h2\r\n                  className=\"signup-heading_text\"\r\n                  style={{ marginBottom: \"15px\" }}\r\n               >\r\n                  create account\r\n               </h2>\r\n               {loginError && (\r\n                  <div className=\"warning\">\r\n                     {/* <span ><WarningIcon className=\"warning-icon\" /></span> */}\r\n                     <h1 className=\"warning-text\">\r\n                        {errorMsg ? errorMsg : \"something went wrong!\"}\r\n                     </h1>\r\n                  </div>\r\n               )}\r\n               <div className=\"signup-div\">\r\n                  <div className=\"signup-form_group\">\r\n                     <input\r\n                        type=\"text\"\r\n                        onChange={(e) => onNameChange(e)}\r\n                        className=\"signup-form_input\"\r\n                        placeholder=\"Full name\"\r\n                        id=\"name\"\r\n                        name={\"name\"}\r\n                        required={true}\r\n                     />\r\n                     <label htmlFor=\"name\" className=\"signup-form_label\">\r\n                        Full name\r\n                     </label>\r\n                     {nameError ? (\r\n                        <p className=\"login-warningText\">{nameMsg}</p>\r\n                     ) : (\r\n                        \"\"\r\n                     )}\r\n                  </div>\r\n                  <div className=\"signup-form_group\">\r\n                     <input\r\n                        type=\"email\"\r\n                        onChange={(e) => onEmailChange(e)}\r\n                        className=\"signup-form_input\"\r\n                        placeholder=\"email address\"\r\n                        id=\"email\"\r\n                        name={\"email\"}\r\n                        required={true}\r\n                     />\r\n                     <label htmlFor=\"email\" className=\"signup-form_label\">\r\n                        email address\r\n                     </label>\r\n                     {emailError ? (\r\n                        <p className=\"signup-warningText\">\r\n                           please input a valid email address\r\n                        </p>\r\n                     ) : (\r\n                        \"\"\r\n                     )}\r\n                  </div>\r\n                  <div className=\"signup-form_group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        onChange={(e) => onPasswordChange(e)}\r\n                        className=\"signup-form_input\"\r\n                        placeholder=\"Password\"\r\n                        id=\"password\"\r\n                        name={\"password\"}\r\n                        required={true}\r\n                     />\r\n                     <label htmlFor=\"password\" className=\"signup-form_label\">\r\n                        password\r\n                     </label>\r\n                  </div>\r\n                  <div className=\"signup-form_group\">\r\n                     <input\r\n                        type=\"password\"\r\n                        onChange={(e) => onPasswordChange(e)}\r\n                        className=\"signup-form_input\"\r\n                        placeholder=\"confirm Password\"\r\n                        id=\"passwordConfirm\"\r\n                        name=\"passwordConfirm\"\r\n                        required={true}\r\n                     />\r\n                     <label\r\n                        htmlFor=\"passwordConfirm\"\r\n                        className=\"signup-form_label\"\r\n                     >\r\n                        confirm password\r\n                     </label>\r\n                     {state.password !== state.passwordConfirm && (\r\n                        <p className=\"signup-warningText\">\r\n                           both password does not match!\r\n                        </p>\r\n                     )}\r\n                  </div>\r\n                  <div className=\"signup-form_buttons\">\r\n                     <button\r\n                        className={`${\r\n                           isDisabled && \"signup-disabled\"\r\n                        } signup-form_btn`}\r\n                        type={\"submit\"}\r\n                        disabled={isDisabled}\r\n                     >\r\n                        {loading ? (\r\n                           <div className=\"loading-button\" />\r\n                        ) : (\r\n                           \"signup\"\r\n                        )}\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n            </form>\r\n         </AuthLayout>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Signup;\r\n","import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    LOGIN_SUCCESS, LOGIN_FAILURE, SIGNUP_FAILURE, SIGNUP_SUCCESS\r\n} from \"./types\";\r\n\r\nimport { signUser, loginUser} from \"../api\";\r\n\r\nexport interface dataObj {\r\n    name?: string\r\n    email: string\r\n    password: string\r\n    passwordConfirm?: string\r\n}\r\nexport const signUp = (data: dataObj) =>\r\n    async (dispatch: Dispatch) => {\r\n        const dataSet = JSON.stringify(data);\r\n        try {\r\n            const res = await axios.post(signUser, JSON.parse(dataSet));\r\n            // console.log(res.data);\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                message: \"success\",\r\n                payload: res.data\r\n            });\r\n            return Promise.resolve();\r\n        } catch (err: any) {\r\n            const { error } = err.response.data;\r\n            let message;\r\n            if (error.code === 11000) message = \"email already exist!\"\r\n\r\n            dispatch({\r\n                type: SIGNUP_FAILURE,\r\n                message\r\n            });\r\n            return Promise.reject();\r\n        }\r\n    }\r\n\r\nexport const login = (data: dataObj) =>\r\n async (dispatch: Dispatch) => {\r\n    const dataSet = JSON.stringify(data);\r\n    try {\r\n        const res = await axios.post(loginUser, JSON.parse(dataSet));\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            message: \"Login successful!\",\r\n            payload: res.data\r\n        });\r\n        return Promise.resolve();\r\n    } catch (err: any) {\r\n        const { error } = err.response.data;\r\n            // console.log(error);\r\n            let message;\r\n            if (error) {\r\n                if (error.statusCode === 401) message = \"incorrect email or password!\";\r\n            } else {\r\n                message = \"server not reachable!\";\r\n            }\r\n            \r\n            dispatch({\r\n                type: LOGIN_FAILURE,\r\n                message\r\n            })\r\n        return Promise.reject();\r\n    }\r\n }","import { FC, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../reducers\";\r\nimport { AppDispatch } from \"../store\";\r\nimport { login, dataObj } from \"../actions/auth\";\r\n\r\nimport AuthLayout from \"../components/AuthLayout\";\r\n\r\nconst Login: FC = () => {\r\n   const useAppDispatch = () => useDispatch<AppDispatch>();\r\n   const dispatch: any = useAppDispatch();\r\n   const userObj = useSelector((state: RootState) => state.user);\r\n   const navigate = useNavigate();\r\n   console.log(userObj);\r\n\r\n   const [state, setState] = useState({\r\n      email: \"\",\r\n      password: \"\"\r\n   });\r\n   const [errorMsg, setErrorMsg] = useState<string>(\"\");\r\n   const [emailError, setEmailError] = useState<boolean>(false);\r\n   const [passwordError, setPasswordError] = useState<boolean>(false);\r\n   const [loading, setLoading] = useState<boolean>(false);\r\n   const [isDisabled, setIsDisabled] = useState<boolean>(false);\r\n   const [loginError, setLoginError] = useState(false);\r\n\r\n   const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState((state) => ({\r\n         ...state,\r\n         email: e.target.value\r\n      }));\r\n      const pattern =\r\n         /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\r\n      if (pattern.test(e.target.value)) {\r\n         e.persist();\r\n         console.log(\"hit here!\");\r\n         setState((state) => ({\r\n            ...state,\r\n            email: e.target.value\r\n         }));\r\n         // setEmail(mail);\r\n         setEmailError(false);\r\n      } else {\r\n         setEmailError(true);\r\n      }\r\n   };\r\n\r\n   const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setState((state) => ({\r\n         ...state,\r\n         password: e.target.value\r\n      }));\r\n      if (e.target.name === \"password\") {\r\n         if (e.target.value === \"\" || e.target.value === null) {\r\n            setPasswordError(true);\r\n         } else {\r\n            setState((state) => ({\r\n               ...state,\r\n               password: e.target.value\r\n            }));\r\n            setPasswordError(false);\r\n         }\r\n      }\r\n   };\r\n\r\n   const onSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      if (emailError === false && passwordError === false) {\r\n         const data: dataObj = {\r\n            email: state.email,\r\n            password: state.password\r\n         };\r\n         console.log(data);\r\n         setLoading(false);\r\n         dispatch(login(data))\r\n            .then(() => {\r\n               console.log(\"logged in\");\r\n               navigate(\"/dashboard/home\");\r\n               setErrorMsg(\"success\");\r\n            })\r\n            .catch(() => {\r\n               setLoginError(true);\r\n               setErrorMsg(\"email already taken\");\r\n            });\r\n         // if (userObj.loggedIn) {\r\n         //    setErrorMsg(userObj.message);\r\n         //    navigate(\"/dashboard/home\");\r\n         // }\r\n      } else {\r\n         setLoginError(true);\r\n      }\r\n      // if (userObj.loggedIn === false) {\r\n      //    setErrorMsg(userObj.message);\r\n      // }\r\n   };\r\n\r\n   return (\r\n      <AuthLayout>\r\n         <form\r\n            noValidate\r\n            className={\"signup-form\"}\r\n            onSubmit={(e) => onSubmit(e)}\r\n         >\r\n            <h2\r\n               className=\"signup-heading_text\"\r\n               style={{ marginBottom: \"15px\" }}\r\n            >\r\n               login\r\n            </h2>\r\n            {loginError && (\r\n               <div className=\"warning\">\r\n                  {console.log(errorMsg)}\r\n                  {/* <span ><WarningIcon className=\"warning-icon\" /></span> */}\r\n                  <h1 className=\"warning-text\">\r\n                     {errorMsg && <span>{errorMsg}</span>}\r\n                  </h1>\r\n               </div>\r\n            )}\r\n            <div className=\"signup-div\">\r\n               <div className=\"signup-form_group\">\r\n                  <input\r\n                     type=\"email\"\r\n                     onChange={(e) => onEmailChange(e)}\r\n                     className=\"signup-form_input\"\r\n                     placeholder=\"email address\"\r\n                     id=\"email\"\r\n                     name={\"email\"}\r\n                     required={true}\r\n                  />\r\n                  <label htmlFor=\"email\" className=\"signup-form_label\">\r\n                     email address\r\n                  </label>\r\n                  {emailError ? (\r\n                     <p className=\"signup-warningText\">\r\n                        please input a valid email address\r\n                     </p>\r\n                  ) : (\r\n                     \"\"\r\n                  )}\r\n               </div>\r\n               <div className=\"signup-form_group\">\r\n                  <input\r\n                     type=\"password\"\r\n                     onChange={(e) => onPasswordChange(e)}\r\n                     className=\"signup-form_input\"\r\n                     placeholder=\"Password\"\r\n                     id=\"password\"\r\n                     name={\"password\"}\r\n                     required={true}\r\n                  />\r\n                  <label htmlFor=\"password\" className=\"signup-form_label\">\r\n                     password\r\n                  </label>\r\n               </div>\r\n               <div className=\"signup-form_buttons\">\r\n                  <button\r\n                     className={`${\r\n                        isDisabled && \"signup-disabled\"\r\n                     } signup-form_btn`}\r\n                     type={\"submit\"}\r\n                     disabled={isDisabled}\r\n                  >\r\n                     {loading ? <div className=\"loading-button\" /> : \"login\"}\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </AuthLayout>\r\n   );\r\n};\r\n\r\nexport default Login;\r\n","import {FC} from 'react';\r\n\r\n//icons\r\nimport {\r\n    Search, Notifications, Face, Settings\r\n} from \"@material-ui/icons\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\ninterface HeaderProps {\r\n    username?: string\r\n}\r\nconst HeaderDash:FC<HeaderProps> = ({ username }) => {\r\n    return (\r\n        <header className=\"dashboard-header\">\r\n            <h2 className=\"dashboard-header-hdText\">\r\n                overview\r\n            </h2>\r\n            \r\n            <form action=\"#\" className={\"dashboard-header-form\"}>\r\n                <button className={\"dashboard-header-form_button\"}>\r\n                    <Search className={\"dashboard-header-form_icon\"} />\r\n                </button>\r\n                <input type=\"search\" className={\"dashboard-header-form_input\"} placeholder={\"search\"} />\r\n            </form>\r\n            <div className={\"dashboard-header-notification\"}>\r\n                <Notifications className={\"dashboard-header-notification_icon\"} />\r\n                <span className={\"dashboard-header-notification-circle\"}></span>\r\n            </div>\r\n            <div className=\"dashboard-header-userBox\">\r\n                <span>\r\n                    <Face className=\"dashboard-header-userBox_avaticon\" />\r\n                </span>\r\n                <span className=\"dashboard-header-userBox_text\">{username}</span>\r\n                <span>\r\n                    <KeyboardArrowDownIcon className=\"dashboard-header-userBox_icon\" />\r\n                </span>\r\n            </div>\r\n            <div className=\"dashboard-header-setting dashboard-header-notification\">\r\n                <span>\r\n                    <Settings className={\"dashboard-header-notification_icon\"} />\r\n                </span>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default HeaderDash;\r\n","import { FC } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nimport HeaderDash from \"./headerDash\";\r\n\r\n//icons\r\nimport {\r\n   AccountCircle,\r\n   AssignmentReturn,\r\n   Store,\r\n   Poll,\r\n   Payment,\r\n   Dashboard\r\n} from \"@material-ui/icons\";\r\n\r\ninterface mainProps {\r\n   username?: string;\r\n}\r\n\r\nconst MainLayout: FC<mainProps> = (props) => {\r\n   return (\r\n      <section className=\"dashboard\">\r\n         <div className=\"dashboard-container\">\r\n            <nav className=\"dashboard-side_bar\">\r\n               <h1\r\n                  className=\"header-logo\"\r\n                  style={{ marginTop: \"25px\", color: \"white\" }}\r\n               >\r\n                  <Link to=\"/\" className=\"backLink\">\r\n                     soft\r\n                     <span>Search</span>\r\n                  </Link>\r\n               </h1>\r\n\r\n               <ul className=\"dashboard-sideNav\">\r\n                  <li className=\"dashboard-sideNav-item dashboard-sideNav-item--active\">\r\n                     <NavLink\r\n                        className=\"dashboard-sideNav-link\"\r\n                        to=\"/dashboard/home\"\r\n                     >\r\n                        <span>\r\n                           <Store className=\"dashboard-sideNav-logo\" />\r\n                        </span>\r\n                        <span>create new</span>\r\n                     </NavLink>\r\n                  </li>\r\n\r\n                  <li className=\"dashboard-sideNav-item\">\r\n                     <NavLink\r\n                        className=\"dashboard-sideNav-link\"\r\n                        to={\"/dashboard/getPosts\"}\r\n                     >\r\n                        <span>\r\n                           <Dashboard className=\"dashboard-sideNav-logo\" />\r\n                        </span>\r\n                        <span>get all posts</span>\r\n                     </NavLink>\r\n                  </li>\r\n               </ul>\r\n\r\n               <footer>\r\n                  <ul>\r\n                     <li className=\"dashboard-sideNav-item\">\r\n                        <NavLink\r\n                           className=\"dashboard-sideNav-link\"\r\n                           to=\"/dashboard/profile\"\r\n                        >\r\n                           <span>\r\n                              <AccountCircle className=\"dashboard-sideNav-logo\" />\r\n                           </span>\r\n                           <span>profile</span>\r\n                        </NavLink>\r\n                     </li>\r\n                  </ul>\r\n\r\n                  <ul>\r\n                     <li className=\"dashboard-sideNav-item\">\r\n                        <NavLink className=\"dashboard-sideNav-link\" to=\"#\">\r\n                           <span>\r\n                              <AssignmentReturn className=\"dashboard-sideNav-logo\" />\r\n                           </span>\r\n                           <span>logout</span>\r\n                        </NavLink>\r\n                     </li>\r\n                  </ul>\r\n               </footer>\r\n            </nav>\r\n            <div className=\"dashboard-content\">\r\n               {/* header component */}\r\n               <HeaderDash username={props.username} />\r\n               <>{props.children}</>\r\n            </div>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default MainLayout;\r\n","import { FC } from \"react\";\r\n\r\nimport MainLayout from \"./mainLayout\";\r\n\r\ninterface dashProps {\r\n   name?: string;\r\n}\r\nconst DashLayout: FC<dashProps> = ({ name, children }) => {\r\n   document.body.classList.add(\"bg-color\");\r\n   return (\r\n      <MainLayout username={name}>\r\n         <main className=\"dashboard-main\">{children}</main>\r\n      </MainLayout>\r\n   );\r\n};\r\n\r\nexport default DashLayout;\r\n","import { FC } from \"react\";\r\n\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n\r\ninterface AuthPopupType {\r\n   content?: any;\r\n   handleClose?: any;\r\n}\r\n\r\nconst AuthPopup: FC<AuthPopupType> = ({ content, handleClose }) => {\r\n   return (\r\n      <div className={\"popup-flex popup-box\"}>\r\n         <div className=\"popup-auth-center popup--animate\">\r\n            <WarningIcon className=\"warning-icon\" />\r\n            <span className=\"text\">{content}</span>\r\n            <button onClick={handleClose} className={\"popup-button\"}>\r\n               &times;\r\n            </button>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default AuthPopup;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../reducers\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport DashLayout from \"../components/dashboard/dashLayout\";\r\nimport AuthPopup from \"../components/authPopup\";\r\n\r\ninterface DashHomeProps {}\r\nconst DashboardHome: FC<DashHomeProps> = (props) => {\r\n   const userObj = useSelector((state: RootState) => state.user);\r\n   const navigate = useNavigate();\r\n   console.log(userObj);\r\n   const { user, loggedIn, message } = userObj;\r\n   const { email, name } = user;\r\n\r\n   const [projectTopic, setProjectTopic] = useState<string>(\"\");\r\n   const [authorName, setAuthorName] = useState<string>(\"\");\r\n   const [supervisorName, setSupervisorName] = useState<string>(\"\");\r\n   const [ref, setRef] = useState<string>(\"\");\r\n   const [body, setBody] = useState<string>(\"\");\r\n   const [yearOfPub, setYearOfPub] = useState<string>(\"\");\r\n   const [showPopup, setShowPopup] = useState<boolean>(false);\r\n   const [errorMsg, setErrorMsg] = useState<string>(\"\");\r\n   const [date, setDate] = useState<any>(new Date());\r\n\r\n   useEffect(() => {\r\n      if (!loggedIn) {\r\n         navigate(\"/login\");\r\n      }\r\n   }, []);\r\n\r\n   const onSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      const data = {\r\n         project_topic: projectTopic,\r\n         author_name: authorName,\r\n         supervisor_name: supervisorName,\r\n         ref: [ref],\r\n         body: [body],\r\n         yearOfPub: date\r\n      };\r\n      console.log(data);\r\n      console.log(date);\r\n      //data to api\r\n      try {\r\n         axios\r\n            .post(\"http://localhost:5000/api/v1/post\", data)\r\n            .then((res) => {\r\n               \r\n               if (res.data.status === \"success\") {\r\n                  console.log(\"here!\");\r\n                  setShowPopup(true);\r\n                  setErrorMsg(\"uploaded successfully\");\r\n               }\r\n            })\r\n            .catch((err) => {\r\n               setShowPopup(true);\r\n               setErrorMsg(\"server not reachable!\");\r\n            });\r\n      } catch (err: any) {\r\n         setShowPopup(true);\r\n         setErrorMsg(\"could not upload data!\");\r\n      }\r\n   };\r\n\r\n   if (showPopup)\r\n      setTimeout(() => {\r\n         setShowPopup(false);\r\n      }, 5000);\r\n\r\n      const handleClose = () => setShowPopup(!showPopup);\r\n   // {\r\n   //    \"project_topic\": \"The Northern Lights\",\r\n   //     \"author_name\": \"Kate Morrison\",\r\n   //     \"supervisor_name\": \"mike george\",\r\n   //     \"ref\": [\"Enjoy the Northern Lights in one of the best places in the world\"],\r\n   //     \"body\": [\"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua, ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum!\\nDolor in reprehenderit\"],\r\n   //     \"yearOfPub\": \"11/04/2001\"\r\n   // }\r\n\r\n   return (\r\n      <DashLayout name={name}>\r\n         <div className=\"dashlayout\">\r\n            {showPopup && <AuthPopup content={errorMsg} handleClose={() => handleClose()} />}\r\n            <div className=\"dashboardHomeSetting-box\">\r\n               <h3 style={{ color: \"white\", fontSize: \"18px\" }}>\r\n                  create new record\r\n               </h3>\r\n               <div className=\"dashboardHomeSetting-panel\">\r\n                  <form onSubmit={(e) => onSubmit(e)}>\r\n                     <h3 style={{ color: \"white\", fontSize: \"15px\" }}>\r\n                        project topic\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                     </h3>\r\n                     <div className=\"signup-form_group\">\r\n                        <input\r\n                           type=\"text\"\r\n                           onChange={(e) => setProjectTopic(e.target.value)}\r\n                           className=\"signup-form_input\"\r\n                           placeholder=\"project topic\"\r\n                           id=\"topic\"\r\n                           name={\"topic\"}\r\n                           required={true}\r\n                        />\r\n                        <label htmlFor=\"topic\" className=\"signup-form_label\">\r\n                           project topic\r\n                        </label>\r\n                     </div>\r\n                     <h3 style={{ color: \"white\", fontSize: \"15px\" }}>\r\n                        author name\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                     </h3>\r\n                     <div className=\"signup-form_group\">\r\n                        <input\r\n                           type=\"text\"\r\n                           onChange={(e) => setAuthorName(e.target.value)}\r\n                           className=\"signup-form_input\"\r\n                           placeholder=\"author name\"\r\n                           id=\"name\"\r\n                           name={\"name\"}\r\n                           // defaultValue={_data ? _data.email : \"\"}\r\n                           required={true}\r\n                        />\r\n                        <label htmlFor=\"name\" className=\"signup-form_label\">\r\n                           author name\r\n                        </label>\r\n                     </div>\r\n                     <h3 style={{ color: \"white\", fontSize: \"15px\" }}>\r\n                        supervisor name\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                     </h3>\r\n                     <div className=\"signup-form_group\">\r\n                        <input\r\n                           type=\"text\"\r\n                           onChange={(e) => setSupervisorName(e.target.value)}\r\n                           className=\"signup-form_input\"\r\n                           placeholder=\"supervisor name\"\r\n                           id=\"super_name\"\r\n                           name={\"super_name\"}\r\n                           required={true}\r\n                        />\r\n                        <label\r\n                           htmlFor=\"super_name\"\r\n                           className=\"signup-form_label\"\r\n                        >\r\n                           supervisor name\r\n                        </label>\r\n                     </div>\r\n\r\n                     <h3 style={{ color: \"white\", fontSize: \"15px\" }}>\r\n                        reference\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                     </h3>\r\n                     <div className=\"signup-form_group\">\r\n                        <textarea\r\n                           required\r\n                           className=\"signup-form_input dashboardHomeSetting_form-input-text\"\r\n                           placeholder=\"reference\"\r\n                           id=\"ref\"\r\n                           name=\"ref\"\r\n                           // defaultValue={_data ? _data.address : \"\"}\r\n                           // value={state.message}\r\n                           onChange={(e) => setRef(e.target.value)}\r\n                        />\r\n                     </div>\r\n\r\n                     <h3 style={{ color: \"white\", fontSize: \"15px\" }}>\r\n                        body\r\n                        <span style={{ color: \"red\" }}>*</span>\r\n                     </h3>\r\n                     <div className=\"signup-form_group\">\r\n                        <textarea\r\n                           required\r\n                           className=\"signup-form_input dashboardHomeSetting_form-input-text\"\r\n                           placeholder=\"body\"\r\n                           id=\"body\"\r\n                           name=\"body\"\r\n                           // defaultValue={_data ? _data.address : \"\"}\r\n                           // value={state.message}\r\n                           onChange={(e) => setBody(e.target.value)}\r\n                        />\r\n                     </div>\r\n                     <DatePicker \r\n                     selected={date} \r\n                     onChange={(date) => setDate(date)}\r\n                     />\r\n                     <button\r\n                        className=\"btn btn--small btn--gold\"\r\n                        style={{ fontSize: \"12px\", marginTop: \"10px\" }}\r\n                     >\r\n                        save changes\r\n                     </button>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </DashLayout>\r\n   );\r\n};\r\n\r\nexport default DashboardHome;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport DashLayout from \"../components/dashboard/dashLayout\";\r\nimport CellBox from \"../components/CellBox\";\r\nimport { getAllPosts } from \"../api\";\r\n\r\ninterface CellProps {\r\n   posts: string[];\r\n}\r\n\r\ninterface postType {\r\n   _id?: string;\r\n   type: string;\r\n   author_name: string;\r\n   id: number;\r\n   project_topic: string;\r\n   body: string[];\r\n   yearOfPub: string;\r\n}\r\n\r\nconst GetPost: FC = () => {\r\n   const [posts, setPost] = useState<any>([]);\r\n   const [loading, setLoading] = useState(false);\r\n   const [error, setError] = useState(false);\r\n   useEffect(() => {\r\n      let res: any;\r\n      const fetchData = async () => {\r\n         try {\r\n            res = await axios.get(`${getAllPosts}`);\r\n            const { data } = res.data;\r\n            setPost(data);\r\n            setLoading(false);\r\n            setError(false);\r\n         } catch (err) {\r\n            setLoading(false);\r\n            setError(true);\r\n         }\r\n      };\r\n      fetchData();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   console.log(posts);\r\n\r\n   return (\r\n      <DashLayout>\r\n         <div className=\"cell\">\r\n            <div className=\"get-posts\">\r\n               {posts.map((el: any) => (\r\n                  // {console.log(el._id)}\r\n                  <Link to={`/post/${el._id}`} className={\"cell-link\"}>\r\n                     <ul className=\"cell-lists\">\r\n                        <CellBox\r\n                           author={el.author_name}\r\n                           title={el.project_topic}\r\n                           body={el.body[0]}\r\n                           yearOfPub={el.yearOfPub.split(\"T\")[0]}\r\n                        />\r\n                     </ul>\r\n                  </Link>\r\n               ))}\r\n            </div>\r\n         </div>\r\n      </DashLayout>\r\n   );\r\n};\r\n\r\nexport default GetPost;\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { LocationProvider } from \"@reach/router\";\nimport \"./App.css\";\n\nimport LandingPage from \"./pages/index\";\nimport Search from \"./pages/search\";\nimport Post from \"./pages/post\";\nimport Signup from \"./pages/signup\";\nimport Login from \"./pages/login\";\nimport DashboardHome from \"./pages/dashboardHome\";\nimport DashboardPosts from \"./pages/dashboard-getpost\";\n\n// let history = createHistory(window);\n\nconst App = () => {\n   return (\n      <BrowserRouter>\n         <LocationProvider>\n            <Routes>\n               <Route path={\"/\"} element={<LandingPage />} />\n               <Route path={\"/search/:searchQuery/:id\"} element={<Search />} />\n               <Route path={\"/post/:id\"} element={<Post />} />\n               <Route path={\"/signup\"} element={<Signup />} />\n               <Route path={\"/login\"} element={<Login />} />\n               <Route path={\"/dashboard/home\"} element={<DashboardHome />} />\n               <Route path={\"/dashboard/getPosts\"} element={<DashboardPosts />} />\n            </Routes>\n         </LocationProvider>\n      </BrowserRouter>\n   );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n   LOGIN_SUCCESS,\r\n   LOGIN_FAILURE,\r\n   SIGNUP_FAILURE,\r\n   SIGNUP_SUCCESS\r\n} from \"../actions/types\";\r\n\r\nexport interface AuthState {\r\n   loggedIn: boolean;\r\n    user: {\r\n       [key: string]: string\r\n   };\r\n   message: string;\r\n}\r\nconst initialState: AuthState = {\r\n   loggedIn: false,\r\n   user: {},\r\n   message: \"\"\r\n};\r\n\r\nconst authReducer = (state: AuthState = initialState, action: any) => {\r\n   switch (action.type) {\r\n      case SIGNUP_SUCCESS:\r\n         // console.log(\"data coming from reducer\" + JSON.stringify(action.payload));\r\n         localStorage.setItem(\"token\", JSON.stringify(action.payload.token));\r\n         let token: string = JSON.parse(\r\n            localStorage.getItem(\"token\") as string\r\n         );\r\n         // console.log(token);\r\n\r\n         return {\r\n            ...state,\r\n            loggedIn: true,\r\n            user: action.payload.user,\r\n            message: action.message\r\n         };\r\n      case SIGNUP_FAILURE:\r\n         // console.log(\"message is \" + JSON.stringify(action.message));\r\n         return {\r\n            ...state,\r\n            loggedIn: false,\r\n            user: {},\r\n            message: action.message\r\n         };\r\n      case LOGIN_SUCCESS:\r\n         localStorage.setItem(\"token\", JSON.stringify(action.payload.token));\r\n         let token2: string = JSON.parse(\r\n            localStorage.getItem(\"token\") as string\r\n         );\r\n         return {\r\n            ...state,\r\n            loggedIn: true,\r\n            user: action.payload.user,\r\n            message: action.message\r\n         };\r\n      case LOGIN_FAILURE:\r\n         return {\r\n            ...state,\r\n            loggedIn: false,\r\n            user: null,\r\n            message: action.message\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n   user: authReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport {rootReducer} from \"./reducers\";\r\n\r\nexport const store = createStore(rootReducer, {}, applyMiddleware(thunk));\r\nexport type AppDispatch = typeof store.dispatch;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}